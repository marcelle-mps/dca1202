#include <stdio.h>
#include <stdlib.h>

int main(){
  int ***x;
  int numberOfLines, numberOfColumns, numberOfPlanes, i, j, k;
  int planeOfChoice;
  
  //Having the user define the size of the matrix
  printf("How many lines do you want in your matrix? ");
  scanf("%d", &numberOfLines);
  printf("\nHow many columns do you want in your matrix? ");
  scanf("%d", &numberOfColumns);
  printf("\nHow many planes do you want in your matrix? ");
  scanf("%d", &numberOfPlanes);
 
  //Allocating space for the matrix
  x = malloc(numberOfLines * sizeof(int*));
  for(i=0; i<numberOfLines; i++){
    x[i] = malloc(numberOfColumns * sizeof(int));
  }
  for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
        x[i][j] = malloc(numberOfPlanes * sizeof(int));
    }
  }
 
  //Filling up the matrix with '0's, to fill the ellipsoid with '1's later on
  for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
        for(k=0; k<numberOfPlanes; k++){
            x[i][j][k] = 0;
        }
      }
   }
 
   //Creating the ellipsoid with '1's
   /*for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
      for(k=0; k<numberOfPlanes; k++){
          x[numberOfLines/(i+2)][numberOfColumns/(i+2)][k] = 1;
      }
    }
  }*/

  //Getting which plane the user wants to see on the z axis
  printf("\nWhich plane of the z axis of your matrix would you like to see? ");
  scanf("%d", &planeOfChoice);
  
  //Printing the plane
  printf("\n");
  for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
      if(planeOfChoice <= numberOfPlanes){
        printf("%3d ", x[i][j][planeOfChoice]);
      }else{
          i = numberOfLines;
          j = numberOfColumns;
        printf("This plane does not exist in this matrix!");
      }
    }
    printf("\n");
  }
    
  //Freeing the memory that was allocated
  for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
        free(x[i][j]);
    }
  }
  for(i=0; i<numberOfLines; i++){
    free(x[i]);
  }
  free(x);
  
  return 0;
}


  /*LETRA A:
  As posições da matriz poderão ser acessadas na variável x[i][j][k]
  a partir desses índices (i, j, k) que podem ser selecionados com um
  valor específico dentro do próprio programa ou um dado pelo usuário.
  
  LETRA B:
  Não consegui encontrar uma solução para a construção da elipsóide
  a tempo (antes do fim do horário da prova), achei algumas ideias em
  phyton no StackOverflow porém nada em C ou C++. Por isso, fiz o resto
  da questão mas deixei a letra B "em branco".
  
  LETRA C:
  A saída do plano desejado será dada a partir de um scanf para saber
  qual dos planos deseja exibir (planeOfChoice) e um printf dentro de
  dois laços de repetição, para percorrer linhas e colunas, juntamente
  com um if e um outro printf que testem se aquele plano é válido, ou
  seja, se ele existe na matriz, e informem se o mesmo não for.*/
  
