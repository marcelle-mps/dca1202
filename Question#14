//Inclui as bibliotecas necessárias
#include <stdio.h>
#include <stdlib.h>

//Função da questão passada
/*void sortBySize (float *x, int size){
    
    int i, j;
    float temporary;
    
    temporary = 0.0;
    
    for(i=0; i<size; i++){
        for(j=i+1; j<size; j++){
            if(x[i] > x[j]){
                temporary = x[i];
                x[i] = x[j];
                x[j] = temporary;
            }
        }
    }
    
}*/

//USANDO O QSORT:

//Comparador da função qsort que retonra 1, -1 ou 0
//dependendo de se o primeiro número é maior, menor
//ou igual ao segundo, respectivamente
int cmp(const void *a, const void *b){
    
    if(*(int*)a > *(int*)b){
        return 1;
    }else if(*(int*)a < *(int*)b){
        return -1;
    }else{
        return 0;
    }
    
}

int main(){
    
    //Declara as variáveis
    int i, size;
    float *x;
 	
 	//Pega o tamanho do vetor com o usuário
 	printf("What's the size of your vector? ");
    scanf("%d", &size);
 	 
 	 //Aloca o espaço para guardar o vetor de acordo
 	 //com o tamanho dado pelo usuário
 	 x = (float*) malloc(size * sizeof(float));
 	
 	 //Recebe os valores que ficarão guardados no vetor
 	 printf("Input the numbers of your vector: ");
 	 for(i=0; i<size; i++){
 	     scanf("%f", &x[i]);
 	 }
 	 
 	 //Utiliza a função qsort para ordenar os valores do vetor
 	 //recebendo, respectivamente, o vetor, quantos elementos tem nele,
 	 //o tamanho de cada elemento do vetor e o retorno do comparador
 	 //que será usado dentro da função qsort para ordenar o vetor
 	 qsort(x, size, sizeof (float), cmp);
 	 
 	 //Imprime os valores do vetor em ordem crescente e
 	 //separados por vírgula
 	 printf("%.4f", x[0]);
 	 for(i=1; i<size; i++){
 	     printf(", %.4f", x[i]);
 	 }
 	 
 	 //Libera o espaço alocado para o vetor
 	 free(x);
 	
}
