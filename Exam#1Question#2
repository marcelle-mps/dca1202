#include <stdio.h>
#include <stdlib.h>

int main(){
  int **x;
  int numberOfLines, numberOfColumns, i, j;
  int **y;
  int numberOfElements, k=0;
  
  //Having the matrix's size pre-defined as 8
  numberOfLines = 8;
  numberOfColumns = 8;
  
  //Having the user define the size of the matrix
  /*printf("How many lines do you want in your matrix? ");
  scanf("%d", &numberOfLines);
  printf("\nHow many columns do you want in your matrix? ");
  scanf("%d", &numberOfColumns);*/
  
  //Making sure that the vector's size comports all of the matrix's elements
  numberOfElements = numberOfColumns * numberOfLines;
 
  //Allocating space for the matrix
  x = malloc(numberOfLines * sizeof(int*));
  for(i=0; i<numberOfLines; i++){
    x[i] = malloc(numberOfColumns * sizeof(int));
  }

  //Filling up the matrix in a checkered pattern, so they look better in the vector
  for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
      if(j%2 == 0){
          if(i%2 == 0){
              x[i][j] = 0;
          }else{
              x[i][j] = 1;
          }
      }else{
          if(i%2 == 0){
              x[i][j] = 1;
          }else{
              x[i][j] = 0;
          }
      }
    }
  }

  //Printing the matrix
  printf("\n");
  for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
      printf("%2d ", x[i][j]);
    }
    printf("\n");
  }
  
  //Allocating space for the vector
  y = malloc(numberOfElements * sizeof(int*));
  
  for(i=0; i<numberOfLines; i++){
    for(j=0; j<numberOfColumns; j++){
      y[k] = x[i][j];
      k++;
    }
  }
  
  //Printing the vector
  printf("\n");
  for(i=0; i<numberOfElements; i++){
      printf("%d ", y[i]);
    }
    
  //Freeing the memory that was allocated
  for(i=0; i<numberOfLines; i++){
    free(x[i]);
  }
  free(x);
  for(i=0; i<numberOfElements; i++){
    free(y[i]);
  }
  
  return 0;
}
